name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta]
        exclude:
          # Skip beta on Windows and macOS to reduce CI time
          - os: windows-latest
            rust: beta
          - os: macos-latest
            rust: beta

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev \
          libgstreamer-plugins-bad1.0-dev \
          libgstreamer-plugins-ugly1.0-dev \
          libasound2-dev \
          pkg-config

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install gstreamer gst-plugins-base gst-plugins-good gst-plugins-bad gst-plugins-ugly

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build all packages
      run: cargo build --workspace --all-features

    - name: Run tests
      run: cargo test --workspace --all-features

    - name: Run integration tests
      run: cargo test -p integration-tests --all-features
      continue-on-error: true # Integration tests may fail in CI environment

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit

    - name: Install cargo-deny
      run: cargo install cargo-deny

    - name: Run cargo-deny
      run: cargo deny check

  build-release:
    name: Build Release Artifacts
    runs-on: ${{ matrix.os }}
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: defiancenetwork-linux
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: defiancenetwork-windows
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: defiancenetwork-macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: defiancenetwork-macos-apple-silicon

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev \
          libgstreamer-plugins-bad1.0-dev \
          libgstreamer-plugins-ugly1.0-dev \
          libasound2-dev \
          pkg-config

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install gstreamer gst-plugins-base gst-plugins-good gst-plugins-bad gst-plugins-ugly

    - name: Build release
      run: cargo build --release --target ${{ matrix.target }} --all-features

    - name: Create artifact directory
      run: mkdir -p artifacts

    - name: Copy binaries (Unix)
      if: runner.os != 'Windows'
      run: |
        cp target/${{ matrix.target }}/release/defiance-core artifacts/
        cp target/${{ matrix.target }}/release/defiance-audigy artifacts/
        cp README.md LICENSE artifacts/

    - name: Copy binaries (Windows)
      if: runner.os == 'Windows'
      run: |
        copy target\${{ matrix.target }}\release\defiance-core.exe artifacts\
        copy target\${{ matrix.target }}\release\defiance-audigy.exe artifacts\
        copy README.md artifacts\
        copy LICENSE artifacts\

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: artifacts/

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Generate documentation
      run: cargo doc --workspace --all-features --no-deps

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/doc
        cname: docs.defiancenetwork.dev
      continue-on-error: true # May fail if Pages is not configured